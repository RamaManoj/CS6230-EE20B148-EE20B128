//
// Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
//
// On Mon Dec 11 00:45:24 IST 2023
//
//
// Ports:
// Name                         I/O  size props
// RDY_feed                       O     1
// CLK                            I     1 clock
// RST_N                          I     1 reset
// feed_output_stage_1            I   151 reg
// EN_feed                        I     1
//
// No combinational paths from inputs to outputs
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkStage_2(CLK,
		 RST_N,

		 feed_output_stage_1,
		 EN_feed,
		 RDY_feed);
  input  CLK;
  input  RST_N;

  // action method feed
  input  [150 : 0] feed_output_stage_1;
  input  EN_feed;
  output RDY_feed;

  // signals for module outputs
  wire RDY_feed;

  // ports of submodule input_fifo
  wire [150 : 0] input_fifo$D_IN, input_fifo$D_OUT;
  wire input_fifo$CLR,
       input_fifo$DEQ,
       input_fifo$EMPTY_N,
       input_fifo$ENQ,
       input_fifo$FULL_N;

  // ports of submodule stage_3
  wire [127 : 0] stage_3$feed_output_stage_2;
  wire stage_3$EN_feed, stage_3$RDY_feed;

  // remaining internal signals
  wire [54 : 0] get_stage_2_mantissa_input_1__h238,
		get_stage_2_mantissa_input_2__h239;
  wire [10 : 0] get_stage_2_exponent__h237;

  // action method feed
  assign RDY_feed = input_fifo$FULL_N ;

  // submodule input_fifo
  FIFOL1 #( /*width*/ 32'd151) input_fifo(.RST(RST_N),
					  .CLK(CLK),
					  .D_IN(input_fifo$D_IN),
					  .ENQ(input_fifo$ENQ),
					  .DEQ(input_fifo$DEQ),
					  .CLR(input_fifo$CLR),
					  .D_OUT(input_fifo$D_OUT),
					  .FULL_N(input_fifo$FULL_N),
					  .EMPTY_N(input_fifo$EMPTY_N));

  // submodule stage_3
  mkStage_3 stage_3(.CLK(CLK),
		    .RST_N(RST_N),
		    .feed_output_stage_2(stage_3$feed_output_stage_2),
		    .EN_feed(stage_3$EN_feed),
		    .RDY_feed(stage_3$RDY_feed));

  // submodule input_fifo
  assign input_fifo$D_IN = feed_output_stage_1 ;
  assign input_fifo$ENQ = EN_feed ;
  assign input_fifo$DEQ = stage_3$RDY_feed && input_fifo$EMPTY_N ;
  assign input_fifo$CLR = 1'b0 ;

  // submodule stage_3
  assign stage_3$feed_output_stage_2 =
	     { input_fifo$D_OUT[150:149],
	       get_stage_2_exponent__h237,
	       get_stage_2_mantissa_input_1__h238,
	       get_stage_2_mantissa_input_2__h239,
	       input_fifo$D_OUT[4:0] } ;
  assign stage_3$EN_feed = stage_3$RDY_feed && input_fifo$EMPTY_N ;

  // remaining internal signals
  assign get_stage_2_exponent__h237 =
	     input_fifo$D_OUT[115] ?
	       input_fifo$D_OUT[148:138] :
	       input_fifo$D_OUT[137:127] ;
  assign get_stage_2_mantissa_input_1__h238 =
	     input_fifo$D_OUT[115] ?
	       input_fifo$D_OUT[114:60] :
	       input_fifo$D_OUT[114:60] >> input_fifo$D_OUT[126:116] ;
  assign get_stage_2_mantissa_input_2__h239 =
	     input_fifo$D_OUT[115] ?
	       input_fifo$D_OUT[59:5] >> input_fifo$D_OUT[126:116] :
	       input_fifo$D_OUT[59:5] ;

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if (stage_3$RDY_feed && input_fifo$EMPTY_N)
	$display("\n**Stage_2_Output**\nsign_input_1:%0b\nsign_input_2:%0b\nexponent:%0b\nmant_input_1:%0b\nmant_input_2:%0b\n",
		 input_fifo$D_OUT[150],
		 input_fifo$D_OUT[149],
		 get_stage_2_exponent__h237,
		 get_stage_2_mantissa_input_1__h238,
		 get_stage_2_mantissa_input_2__h239);
  end
  // synopsys translate_on
endmodule  // mkStage_2

