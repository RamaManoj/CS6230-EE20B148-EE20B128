/*
 * Generated by Bluespec Compiler, version 2021.12.1 (build fd501401)
 * 
 * On Sat Dec  9 12:17:44 IST 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkStage_1.h"


/* Constructor */
MOD_mkStage_1::MOD_mkStage_1(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_input_1(simHdl, "input_1", this, 64u, 1u, 0u, 1u),
    INST_input_2(simHdl, "input_2", this, 64u, 1u, 0u, 1u),
    INST_is_valid(simHdl, "is_valid", this, 1u, 1u, 0u, 1u),
    PORT_RST_N((tUInt8)1u),
    DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49(153u),
    DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48(131u),
    DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47(119u)
{
  PORT_get_output.setSize(155u);
  PORT_get_output.clear();
  symbol_count = 4u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkStage_1::init_symbols_0()
{
  init_symbol(&symbols[0u], "get_output", SYM_PORT, &PORT_get_output, 155u);
  init_symbol(&symbols[1u], "input_1", SYM_MODULE, &INST_input_1);
  init_symbol(&symbols[2u], "input_2", SYM_MODULE, &INST_input_2);
  init_symbol(&symbols[3u], "is_valid", SYM_MODULE, &INST_is_valid);
}


/* Rule actions */


/* Methods */

void MOD_mkStage_1::METH_feed(tUInt64 ARG_feed_input_1,
			      tUInt64 ARG_feed_input_2,
			      tUInt8 ARG_feed_is_valid)
{
  INST_input_1.METH_enq(ARG_feed_input_1);
  INST_input_2.METH_enq(ARG_feed_input_2);
  INST_is_valid.METH_enq(ARG_feed_is_valid);
}

tUInt8 MOD_mkStage_1::METH_RDY_feed()
{
  tUInt8 DEF_CAN_FIRE_feed;
  tUInt8 PORT_RDY_feed;
  DEF_CAN_FIRE_feed = INST_input_1.METH_i_notFull() && (INST_input_2.METH_i_notFull() && INST_is_valid.METH_i_notFull());
  PORT_RDY_feed = DEF_CAN_FIRE_feed;
  return PORT_RDY_feed;
}

tUWide MOD_mkStage_1::METH_get_output()
{
  tUInt64 DEF_x__h1284;
  tUInt64 DEF_x__h1281;
  tUInt8 DEF_NOT_input_1_first_BITS_51_TO_0_1_EQ_0b0_2___d33;
  tUInt8 DEF_NOT_input_2_first_BITS_51_TO_0_7_EQ_0b0_8___d36;
  tUInt8 DEF_input_1_first_BITS_62_TO_52_EQ_0b11111111111___d32;
  tUInt8 DEF_input_2_first_BITS_62_TO_52_5_EQ_0b11111111111___d35;
  tUInt8 DEF_input_1_first_BITS_62_TO_52_EQ_0b0___d10;
  tUInt32 DEF__theResult_____1_exponent_input_1__h1107;
  tUInt8 DEF_input_1_first_BITS_51_TO_0_1_EQ_0b0___d12;
  tUInt8 DEF_input_2_first_BITS_51_TO_0_7_EQ_0b0___d18;
  tUInt8 DEF_input_2_first_BITS_62_TO_52_5_EQ_0b0___d16;
  tUInt32 DEF__theResult_____1_exponent_input_2__h1108;
  tUInt8 DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d21;
  tUInt32 DEF_x__h1276;
  tUInt8 DEF_x__h1265;
  tUInt8 DEF_x__h380;
  tUInt32 DEF_input_2_first_BITS_62_TO_52___d15;
  tUInt32 DEF_input_1_first_BITS_62_TO_52___d9;
  tUInt64 DEF_input_2_first_BITS_51_TO_0___d17;
  tUInt64 DEF_input_1_first_BITS_51_TO_0___d11;
  tUInt64 DEF_input_1_first____d5;
  tUInt64 DEF_input_2_first____d7;
  DEF_input_2_first____d7 = INST_input_2.METH_first();
  DEF_input_1_first____d5 = INST_input_1.METH_first();
  DEF_input_1_first_BITS_51_TO_0___d11 = (tUInt64)(4503599627370495llu & DEF_input_1_first____d5);
  DEF_input_2_first_BITS_51_TO_0___d17 = (tUInt64)(4503599627370495llu & DEF_input_2_first____d7);
  DEF_input_2_first_BITS_62_TO_52___d15 = (tUInt32)(2047u & (DEF_input_2_first____d7 >> 52u));
  DEF_input_1_first_BITS_62_TO_52___d9 = (tUInt32)(2047u & (DEF_input_1_first____d5 >> 52u));
  DEF_x__h380 = (tUInt8)(DEF_input_1_first____d5 >> 63u);
  DEF_x__h1265 = (tUInt8)(DEF_input_2_first____d7 >> 63u);
  DEF_input_2_first_BITS_62_TO_52_5_EQ_0b0___d16 = DEF_input_2_first_BITS_62_TO_52___d15 == 0u;
  DEF_input_2_first_BITS_51_TO_0_7_EQ_0b0___d18 = DEF_input_2_first_BITS_51_TO_0___d17 == 0llu;
  DEF__theResult_____1_exponent_input_2__h1108 = DEF_input_2_first_BITS_62_TO_52_5_EQ_0b0___d16 ? (DEF_input_2_first_BITS_51_TO_0_7_EQ_0b0___d18 ? DEF_input_2_first_BITS_62_TO_52___d15 : 1u) : DEF_input_2_first_BITS_62_TO_52___d15;
  DEF_input_1_first_BITS_51_TO_0_1_EQ_0b0___d12 = DEF_input_1_first_BITS_51_TO_0___d11 == 0llu;
  DEF_input_1_first_BITS_62_TO_52_EQ_0b0___d10 = DEF_input_1_first_BITS_62_TO_52___d9 == 0u;
  DEF__theResult_____1_exponent_input_1__h1107 = DEF_input_1_first_BITS_62_TO_52_EQ_0b0___d10 ? (DEF_input_1_first_BITS_51_TO_0_1_EQ_0b0___d12 ? DEF_input_1_first_BITS_62_TO_52___d9 : 1u) : DEF_input_1_first_BITS_62_TO_52___d9;
  DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d21 = DEF__theResult_____1_exponent_input_1__h1107 < DEF__theResult_____1_exponent_input_2__h1108;
  DEF_x__h1276 = DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d21 ? 2047u & (DEF__theResult_____1_exponent_input_2__h1108 - DEF__theResult_____1_exponent_input_1__h1107) : 2047u & (DEF__theResult_____1_exponent_input_1__h1107 - DEF__theResult_____1_exponent_input_2__h1108);
  DEF_input_2_first_BITS_62_TO_52_5_EQ_0b11111111111___d35 = DEF_input_2_first_BITS_62_TO_52___d15 == 2047u;
  DEF_NOT_input_2_first_BITS_51_TO_0_7_EQ_0b0_8___d36 = !DEF_input_2_first_BITS_51_TO_0_7_EQ_0b0___d18;
  DEF_input_1_first_BITS_62_TO_52_EQ_0b11111111111___d32 = DEF_input_1_first_BITS_62_TO_52___d9 == 2047u;
  DEF_NOT_input_1_first_BITS_51_TO_0_1_EQ_0b0_2___d33 = !DEF_input_1_first_BITS_51_TO_0_1_EQ_0b0___d12;
  DEF_x__h1281 = 36028797018963967llu & ((((tUInt64)(DEF_input_1_first_BITS_62_TO_52_EQ_0b0___d10 ? (tUInt8)0u : (tUInt8)1u)) << 52u) | DEF_input_1_first_BITS_51_TO_0___d11);
  DEF_x__h1284 = 36028797018963967llu & ((((tUInt64)(DEF_input_2_first_BITS_62_TO_52_5_EQ_0b0___d16 ? (tUInt8)0u : (tUInt8)1u)) << 52u) | DEF_input_2_first_BITS_51_TO_0___d17);
  DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47.set_bits_in_word((tUInt32)(DEF_x__h1281 >> 32u),
										3u,
										0u,
										23u).build_concat((((tUInt64)((tUInt32)(DEF_x__h1281))) << 32u) | (tUInt64)((tUInt32)(DEF_x__h1284 >> 23u)),
												  32u,
												  64u).set_whole_word((((((((((((tUInt32)(8388607u & DEF_x__h1284)) << 9u) | (((tUInt32)(DEF_input_1_first_BITS_62_TO_52_EQ_0b0___d10 && DEF_input_1_first_BITS_51_TO_0_1_EQ_0b0___d12)) << 8u)) | (((tUInt32)(DEF_input_2_first_BITS_62_TO_52_5_EQ_0b0___d16 && DEF_input_2_first_BITS_51_TO_0_7_EQ_0b0___d18)) << 7u)) | (((tUInt32)(DEF_input_1_first_BITS_62_TO_52_EQ_0b11111111111___d32 && DEF_NOT_input_1_first_BITS_51_TO_0_1_EQ_0b0_2___d33)) << 6u)) | (((tUInt32)(DEF_input_2_first_BITS_62_TO_52_5_EQ_0b11111111111___d35 && DEF_NOT_input_2_first_BITS_51_TO_0_7_EQ_0b0_8___d36)) << 5u)) | (((tUInt32)(DEF_input_1_first_BITS_62_TO_52_EQ_0b11111111111___d32 && DEF_input_1_first_BITS_51_TO_0_1_EQ_0b0___d12)) << 4u)) | (((tUInt32)(DEF_input_2_first_BITS_62_TO_52_5_EQ_0b11111111111___d35 && DEF_input_2_first_BITS_51_TO_0_7_EQ_0b0___d18)) << 3u)) | (((tUInt32)(DEF_input_1_first_BITS_62_TO_52_EQ_0b0___d10 && DEF_NOT_input_1_first_BITS_51_TO_0_1_EQ_0b0_2___d33)) << 2u)) | (((tUInt32)(DEF_input_2_first_BITS_62_TO_52_5_EQ_0b0___d16 && DEF_NOT_input_2_first_BITS_51_TO_0_7_EQ_0b0_8___d36)) << 1u)) | (tUInt32)(INST_is_valid.METH_first()),
														      0u);
  DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48.set_bits_in_word((tUInt8)(DEF_x__h1276 >> 8u),
										4u,
										0u,
										3u).set_whole_word(((((tUInt32)((tUInt8)((tUInt8)255u & DEF_x__h1276))) << 24u) | (((tUInt32)(!DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d21)) << 23u)) | DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47.get_bits_in_word32(3u,
																																									 0u,
																																									 23u),
												   3u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47.get_whole_word(2u),
														      2u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47.get_whole_word(1u),
																	 1u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47.get_whole_word(0u),
																			    0u);
  DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49.set_bits_in_word(33554431u & (((DEF__theResult_____1_exponent_input_1__h1107 << 14u) | (DEF__theResult_____1_exponent_input_2__h1108 << 3u)) | (tUInt32)(DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48.get_bits_in_word8(4u,
																																				       0u,
																																				       3u))),
										4u,
										0u,
										25u).set_whole_word(DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48.get_whole_word(3u),
												    3u).set_whole_word(DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48.get_whole_word(2u),
														       2u).set_whole_word(DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48.get_whole_word(1u),
																	  1u).set_whole_word(DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48.get_whole_word(0u),
																			     0u);
  PORT_get_output.set_bits_in_word(134217727u & (((((tUInt32)(DEF_x__h380)) << 26u) | (((tUInt32)(DEF_x__h1265)) << 25u)) | DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49.get_bits_in_word32(4u,
																									    0u,
																									    25u)),
				   4u,
				   0u,
				   27u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49.get_whole_word(3u),
						       3u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49.get_whole_word(2u),
									  2u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49.get_whole_word(1u),
											     1u).set_whole_word(DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49.get_whole_word(0u),
														0u);
  return PORT_get_output;
}

tUInt8 MOD_mkStage_1::METH_RDY_get_output()
{
  tUInt8 DEF_CAN_FIRE_get_output;
  tUInt8 DEF_input_1_i_notEmpty__1_AND_is_valid_i_notEmpty__2___d53;
  tUInt8 DEF_input_2_i_notEmpty____d50;
  tUInt8 PORT_RDY_get_output;
  DEF_input_2_i_notEmpty____d50 = INST_input_2.METH_i_notEmpty();
  DEF_input_1_i_notEmpty__1_AND_is_valid_i_notEmpty__2___d53 = INST_input_1.METH_i_notEmpty() && INST_is_valid.METH_i_notEmpty();
  DEF_CAN_FIRE_get_output = DEF_input_2_i_notEmpty____d50 && DEF_input_1_i_notEmpty__1_AND_is_valid_i_notEmpty__2___d53;
  PORT_RDY_get_output = DEF_CAN_FIRE_get_output;
  return PORT_RDY_get_output;
}


/* Reset routines */

void MOD_mkStage_1::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_is_valid.reset_RST(ARG_rst_in);
  INST_input_2.reset_RST(ARG_rst_in);
  INST_input_1.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkStage_1::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkStage_1::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_input_1.dump_state(indent + 2u);
  INST_input_2.dump_state(indent + 2u);
  INST_is_valid.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkStage_1::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 8u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48", 131u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47", 119u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49", 153u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "get_output", 155u);
  num = INST_input_1.dump_VCD_defs(num);
  num = INST_input_2.dump_VCD_defs(num);
  num = INST_is_valid.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkStage_1::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkStage_1 &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkStage_1::vcd_defs(tVCDDumpType dt, MOD_mkStage_1 &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 131u);
    vcd_write_x(sim_hdl, num++, 119u);
    vcd_write_x(sim_hdl, num++, 153u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 155u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48) != DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48, 131u);
	backing.DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48 = DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48;
      }
      ++num;
      if ((backing.DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47) != DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47, 119u);
	backing.DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47 = DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47;
      }
      ++num;
      if ((backing.DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49) != DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49, 153u);
	backing.DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49 = DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.PORT_get_output) != PORT_get_output)
      {
	vcd_write_val(sim_hdl, num, PORT_get_output, 155u);
	backing.PORT_get_output = PORT_get_output;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48, 131u);
      backing.DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48 = DEF_IF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THE_ETC___d48;
      vcd_write_val(sim_hdl, num++, DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47, 119u);
      backing.DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47 = DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_0_ETC___d47;
      vcd_write_val(sim_hdl, num++, DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49, 153u);
      backing.DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49 = DEF_IF_input_1_first_BITS_62_TO_52_EQ_0b0_0_THEN_I_ETC___d49;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, PORT_get_output, 155u);
      backing.PORT_get_output = PORT_get_output;
    }
}

void MOD_mkStage_1::vcd_prims(tVCDDumpType dt, MOD_mkStage_1 &backing)
{
  INST_input_1.dump_VCD(dt, backing.INST_input_1);
  INST_input_2.dump_VCD(dt, backing.INST_input_2);
  INST_is_valid.dump_VCD(dt, backing.INST_is_valid);
}
